/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * CommonDRNote.java
 *
 * Created on Feb 27, 2012, 1:38:40 PM
 */
package com.nbs.view.F28.Payments;

import Sources.TableColumnFontChanger;
import Sources.TableColumnRightAlign;
import com.nbs.impl.ServerConnection;
import com.nbs.view.common.FormatConstants;
import com.nbs.view.common.GeneralUserLogin;
import com.nbs.view.common.TableHeaders;
import com.nbs.view.common.search.FindAccount5Data;
import com.nbs.view.common.search.FindSectionOrOutsider;
import com.nbs.view.manager.CommonJurnalForm;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.nbs.components.HiddenIDTextField;
import org.nbs.resources.Item;

/**
 *
 * @author mmh
 */
public class CommonGLAccountOpenningBalances extends javax.swing.JDialog {

    public static int DRSubSectionID;
    public static int DROutSiderID;
    public static int acctL5ID;
    public static int reasonID;
    private int glcode;
    DefaultTableModel dtm1;
    DefaultTableModel dtm2;
    private String hdID = "0";
    private JDialog dialog;

    public CommonGLAccountOpenningBalances(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Server on " + GeneralUserLogin.data.getIP());

        setLocationRelativeTo(null);
        this.dialog = this;
        statusUserName.setText(GeneralUserLogin.data.getUserCode() + "-" + GeneralUserLogin.data.getUsername());
        txtTotalCR.setText("0.00");
        dtm2 = (DefaultTableModel) Table2.getModel();
        dtm1 = (DefaultTableModel) Table1.getModel();
        Table1.getTableHeader().setFont(new Font("Iskoola Pota", Font.PLAIN, 16));
        Table2.getTableHeader().setMaximumSize(new Dimension(jScrollPane2.getWidth(), 1));
        TableColumnFontChanger.setAmalee(Table2, 0);
        TableColumnFontChanger.setAmalee(Table2, 1);
        TableColumnRightAlign.alignMany(Table2, new int[]{2, 3});
        loadFinancialYear();
        initRowData();
        viewDT();
    }

    public CommonGLAccountOpenningBalances(java.awt.Frame parent, boolean b, int GLCode, String title) {
        this(parent, b);
    }

    public CommonGLAccountOpenningBalances(java.awt.Frame parent, boolean b, int GLCode, String title, String hdid) {
        this(parent, b, GLCode, title);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lableName = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtDebitAccount = new org.nbs.components.HiddenIDTextField();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cmbFinancialYear = new org.nbs.components.HiddenItemComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table2 = new org.jdesktop.swingx.JXTable();
        jPanel7 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtTotalCR = new org.nbs.components.SelectAtFocusFormattedTextField();
        txtTotalDR = new org.nbs.components.SelectAtFocusFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table1 = new org.jdesktop.swingx.JXTable();
        jPanel8 = new javax.swing.JPanel();
        txtDTSubSection = new org.nbs.components.HiddenIDTextField();
        txtDTOutsider = new org.nbs.components.HiddenIDTextField();
        txtDTDR = new org.nbs.components.HiddenIDTextField();
        txtDTCR = new org.nbs.components.HiddenIDTextField();
        jXStatusBar1 = new org.jdesktop.swingx.JXStatusBar();
        jLabel1 = new javax.swing.JLabel();
        statusGLCode = new javax.swing.JLabel();
        statusSubsection = new javax.swing.JLabel();
        statusOutsider = new javax.swing.JLabel();
        statusReason = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        statusUserName = new javax.swing.JLabel();
        statusHDID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAutoRequestFocus(false);
        setMinimumSize(new java.awt.Dimension(1291, 723));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 88, 136));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lableName.setFont(new java.awt.Font("Iskoola Pota", 0, 25)); // NOI18N
        lableName.setForeground(new java.awt.Color(255, 255, 255));
        lableName.setText("ආරම්භක ශේෂ ඇතුලත් කිරීම");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(lableName, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lableName, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        jPanel3.setBackground(java.awt.Color.white);
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(37, 51, 224)), "විස්තරය", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Iskoola Pota", 0, 17), new java.awt.Color(222, 56, 21))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Iskoola Pota", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 153, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("ලෙජර ගිණුම :");

        txtDebitAccount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDebitAccount.setFont(new java.awt.Font("Iskoola Pota", 1, 17)); // NOI18N
        txtDebitAccount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDebitAccountKeyReleased(evt);
            }
        });
        txtDebitAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDebitAccountActionPerformed(evt);
            }
        });
        txtDebitAccount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDebitAccountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDebitAccountFocusLost(evt);
            }
        });

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Iskoola Pota", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 153, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("ගිණුම් වර්ෂය :");

        cmbFinancialYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFinancialYearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(txtDebitAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(cmbFinancialYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(77, 77, 77))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cmbFinancialYear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDebitAccount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        Table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table2.setFont(new java.awt.Font("Iskoola Pota", 0, 15)); // NOI18N
        Table2.setRowHeight(25);
        Table2.getTableHeader().setReorderingAllowed(false);
        Table2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Table2MouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table2MouseClicked(evt);
            }
        });
        Table2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Table2KeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(Table2);
        if (Table2.getColumnModel().getColumnCount() > 0) {
            Table2.getColumnModel().getColumn(0).setMinWidth(387);
            Table2.getColumnModel().getColumn(0).setPreferredWidth(387);
            Table2.getColumnModel().getColumn(0).setMaxWidth(387);
            Table2.getColumnModel().getColumn(1).setMinWidth(390);
            Table2.getColumnModel().getColumn(1).setPreferredWidth(390);
            Table2.getColumnModel().getColumn(1).setMaxWidth(390);
            Table2.getColumnModel().getColumn(2).setMinWidth(250);
            Table2.getColumnModel().getColumn(2).setPreferredWidth(250);
            Table2.getColumnModel().getColumn(2).setMaxWidth(250);
            Table2.getColumnModel().getColumn(3).setMinWidth(250);
            Table2.getColumnModel().getColumn(3).setPreferredWidth(250);
            Table2.getColumnModel().getColumn(3).setMaxWidth(250);
            Table2.getColumnModel().getColumn(4).setMinWidth(0);
            Table2.getColumnModel().getColumn(4).setPreferredWidth(0);
            Table2.getColumnModel().getColumn(4).setMaxWidth(0);
            Table2.getColumnModel().getColumn(5).setMinWidth(0);
            Table2.getColumnModel().getColumn(5).setPreferredWidth(0);
            Table2.getColumnModel().getColumn(5).setMaxWidth(0);
            Table2.getColumnModel().getColumn(6).setMinWidth(0);
            Table2.getColumnModel().getColumn(6).setPreferredWidth(0);
            Table2.getColumnModel().getColumn(6).setMaxWidth(0);
        }

        jPanel7.setBackground(new java.awt.Color(204, 204, 204));

        jButton6.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        jButton6.setText("වසන්න");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel14.setText("Total Book Balance :");

        txtTotalCR.setFont(new java.awt.Font("Ubuntu", 1, 17)); // NOI18N
        txtTotalCR.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtTotalCR.setHorizontalAlignment(11);

        txtTotalDR.setFont(new java.awt.Font("Ubuntu", 1, 17)); // NOI18N
        txtTotalDR.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtTotalDR.setHorizontalAlignment(11);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotalDR, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotalCR, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalCR, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalDR, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setViewportBorder(null);

        Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "අංශය", "නම", "හර", "බැර", "SubSectionID", "OutsiderID", "RecID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Table1.setRowHeight(29);
        Table1.getTableHeader().setReorderingAllowed(false);
        Table1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                Table1ComponentMoved(evt);
            }
        });
        Table1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Table1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Table1);
        if (Table1.getColumnModel().getColumnCount() > 0) {
            Table1.getColumnModel().getColumn(0).setMinWidth(387);
            Table1.getColumnModel().getColumn(0).setPreferredWidth(387);
            Table1.getColumnModel().getColumn(0).setMaxWidth(387);
            Table1.getColumnModel().getColumn(1).setMinWidth(390);
            Table1.getColumnModel().getColumn(1).setPreferredWidth(390);
            Table1.getColumnModel().getColumn(1).setMaxWidth(390);
            Table1.getColumnModel().getColumn(2).setMinWidth(250);
            Table1.getColumnModel().getColumn(2).setPreferredWidth(250);
            Table1.getColumnModel().getColumn(2).setMaxWidth(250);
            Table1.getColumnModel().getColumn(3).setMinWidth(250);
            Table1.getColumnModel().getColumn(3).setPreferredWidth(250);
            Table1.getColumnModel().getColumn(3).setMaxWidth(250);
            Table1.getColumnModel().getColumn(4).setMinWidth(0);
            Table1.getColumnModel().getColumn(4).setPreferredWidth(0);
            Table1.getColumnModel().getColumn(4).setMaxWidth(0);
            Table1.getColumnModel().getColumn(5).setMinWidth(0);
            Table1.getColumnModel().getColumn(5).setPreferredWidth(0);
            Table1.getColumnModel().getColumn(5).setMaxWidth(0);
            Table1.getColumnModel().getColumn(6).setMinWidth(0);
            Table1.getColumnModel().getColumn(6).setPreferredWidth(0);
            Table1.getColumnModel().getColumn(6).setMaxWidth(0);
        }

        jPanel8.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 2, 1, 1));

        txtDTSubSection.setBackground(new java.awt.Color(191, 214, 235));
        txtDTSubSection.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDTSubSection.setFont(new java.awt.Font("AMALEE", 0, 18)); // NOI18N
        txtDTSubSection.setMaximumSize(new java.awt.Dimension(387, 30));
        txtDTSubSection.setMinimumSize(new java.awt.Dimension(387, 30));
        txtDTSubSection.setPreferredSize(new java.awt.Dimension(387, 30));
        txtDTSubSection.setSize(new java.awt.Dimension(387, 30));
        txtDTSubSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDTSubSectionActionPerformed(evt);
            }
        });
        txtDTSubSection.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDTSubSectionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDTSubSectionFocusLost(evt);
            }
        });

        txtDTOutsider.setBackground(new java.awt.Color(191, 214, 235));
        txtDTOutsider.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDTOutsider.setFont(new java.awt.Font("AMALEE", 0, 18)); // NOI18N
        txtDTOutsider.setMaximumSize(new java.awt.Dimension(390, 30));
        txtDTOutsider.setMinimumSize(new java.awt.Dimension(390, 30));
        txtDTOutsider.setPreferredSize(new java.awt.Dimension(390, 30));
        txtDTOutsider.setSize(new java.awt.Dimension(390, 30));
        txtDTOutsider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDTOutsiderActionPerformed(evt);
            }
        });
        txtDTOutsider.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDTOutsiderFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDTOutsiderFocusLost(evt);
            }
        });

        txtDTDR.setBackground(new java.awt.Color(191, 214, 235));
        txtDTDR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDTDR.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtDTDR.setHorizontalAlignment(11);
        txtDTDR.setMaximumSize(new java.awt.Dimension(250, 30));
        txtDTDR.setMinimumSize(new java.awt.Dimension(250, 30));
        txtDTDR.setPreferredSize(new java.awt.Dimension(250, 30));
        txtDTDR.setSize(new java.awt.Dimension(250, 30));
        txtDTDR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDTDRActionPerformed(evt);
            }
        });
        txtDTDR.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDTDRFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDTDRFocusLost(evt);
            }
        });

        txtDTCR.setBackground(new java.awt.Color(191, 214, 235));
        txtDTCR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDTCR.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtDTCR.setHorizontalAlignment(11);
        txtDTCR.setMaximumSize(new java.awt.Dimension(250, 30));
        txtDTCR.setMinimumSize(new java.awt.Dimension(250, 30));
        txtDTCR.setPreferredSize(new java.awt.Dimension(250, 30));
        txtDTCR.setSize(new java.awt.Dimension(250, 30));
        txtDTCR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDTCRActionPerformed(evt);
            }
        });
        txtDTCR.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDTCRFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDTCRFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addComponent(txtDTSubSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtDTOutsider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtDTDR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtDTCR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDTSubSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDTOutsider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDTDR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDTCR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jXStatusBar1Layout = new javax.swing.GroupLayout(jXStatusBar1);
        jXStatusBar1.setLayout(jXStatusBar1Layout);
        jXStatusBar1Layout.setHorizontalGroup(
            jXStatusBar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXStatusBar1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusHDID, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusGLCode, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusSubsection, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusOutsider, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusReason, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(588, 588, 588)
                .addComponent(statusUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jXStatusBar1Layout.setVerticalGroup(
            jXStatusBar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXStatusBar1Layout.createSequentialGroup()
                .addGroup(jXStatusBar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusGLCode, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusSubsection, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusOutsider, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusReason, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusHDID, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jXStatusBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addComponent(jXStatusBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    new FindAccount5Data(this, true, 9).setVisible(true);
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    this.dispose();
    CommonJurnalForm.ItemRefresh.doClick();
}//GEN-LAST:event_jButton6ActionPerformed

private void Table2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table2MouseReleased

}//GEN-LAST:event_Table2MouseReleased

private void Table2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table2MouseClicked
    if (Table2.getSelectedRow() > -1) {
        int selectedRow = Table2.getSelectedRow();
        txtDTSubSection.setText(String.valueOf(Table2.getValueAt(selectedRow, 0)));
        txtDTOutsider.setText(String.valueOf(Table2.getValueAt(selectedRow, 1)));
        txtDTDR.setText(String.valueOf(Table2.getValueAt(selectedRow, 2)));
        txtDTCR.setText(String.valueOf(Table2.getValueAt(selectedRow, 3)));
        txtDTSubSection.setId(Integer.parseInt(String.valueOf(Table2.getValueAt(selectedRow, 4))));
        txtDTOutsider.setId(Integer.parseInt(String.valueOf(Table2.getValueAt(selectedRow, 5))));
        dtid = Integer.parseInt(String.valueOf(Table2.getValueAt(selectedRow, 6)));
//        txtDTSubSection.setId(Integer.parseInt(String.valueOf(Table2.getValueAt(selectedRow, 8))));
//        txtDTSubSection.setText(String.valueOf(Table2.getValueAt(selectedRow, 0)));
//        txtDTOutsider.setText(String.valueOf(Table2.getValueAt(selectedRow, 1)));
//        txtDTOutsider.setId(Integer.parseInt(String.valueOf(Table2.getValueAt(selectedRow, 9))));
//        txtDTReason.setText(String.valueOf(Table2.getValueAt(selectedRow, 2)));
//        txtDTReason.setId(Integer.parseInt(String.valueOf(Table2.getValueAt(selectedRow, 10))));
//        txtDTRemarks.setText(String.valueOf(Table2.getValueAt(selectedRow, 3)));
//        txtDTRemarks.setId(Integer.parseInt(String.valueOf(Table2.getValueAt(selectedRow, 12))));
//        txtDTGLAcct.setText(String.valueOf(Table2.getValueAt(selectedRow, 4)));
//        txtDTGLAcct.setId(Integer.parseInt(String.valueOf(Table2.getValueAt(selectedRow, 11))));
//        txtDTGLAcctDescription.setText(String.valueOf(Table2.getValueAt(selectedRow, 5)));
//        txtDTDrCr.setText(String.valueOf(Table2.getValueAt(selectedRow, 6)));
//        dtid = Integer.parseInt(String.valueOf(Table2.getValueAt(selectedRow, 7)));
    }
}//GEN-LAST:event_Table2MouseClicked

private void Table2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table2KeyReleased

}//GEN-LAST:event_Table2KeyReleased

private void txtDebitAccountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDebitAccountKeyReleased
// TODO add your handling code here:
}//GEN-LAST:event_txtDebitAccountKeyReleased

    private void Table1ComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_Table1ComponentMoved
        jScrollPane2.getViewport().setViewPosition(jScrollPane1.getViewport().getViewPosition());
    }//GEN-LAST:event_Table1ComponentMoved

    private void Table1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table1KeyReleased

    }//GEN-LAST:event_Table1KeyReleased

    private void txtDebitAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDebitAccountActionPerformed
        jButton1.doClick();
    }//GEN-LAST:event_txtDebitAccountActionPerformed

    private void txtDTSubSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDTSubSectionActionPerformed
        new FindSectionOrOutsider(CommonGLAccountOpenningBalances.this, true, TableHeaders.SUBSECTIONFINDER_TABLE_MODEL, TableHeaders.SUBSECTIONFINDER_TABLE_MODEL2, 29, "අනු අංශය").setVisible(true);
    }//GEN-LAST:event_txtDTSubSectionActionPerformed

    private void txtDTOutsiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDTOutsiderActionPerformed
        new FindSectionOrOutsider(CommonGLAccountOpenningBalances.this, true, TableHeaders.OUTSIDERFINDER_TABLE_MODEL, TableHeaders.OUTSIDERFINDER_TABLE_MODEL2, 30, "පාර්ශවකරු").setVisible(true);
    }//GEN-LAST:event_txtDTOutsiderActionPerformed

    private void txtDTDRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDTDRActionPerformed
        txtDTCR.grabFocus();
    }//GEN-LAST:event_txtDTDRActionPerformed

    private void txtDTCRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDTCRActionPerformed
        saveDetail();
        viewDT();
        getTotal();
        initRowData();
        txtDTSubSection.grabFocus();
    }//GEN-LAST:event_txtDTCRActionPerformed

    private void txtDebitAccountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDebitAccountFocusGained
        txtDebitAccount.selectAll();
        txtDebitAccount.setBackground(Color.YELLOW);
        viewDT();
    }//GEN-LAST:event_txtDebitAccountFocusGained

    private void txtDebitAccountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDebitAccountFocusLost
        txtDebitAccount.select(0, 0);
        txtDebitAccount.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtDebitAccountFocusLost

    private void txtDTSubSectionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDTSubSectionFocusGained
        txtDTSubSection.selectAll();
        txtDTSubSection.setBackground(Color.YELLOW);
    }//GEN-LAST:event_txtDTSubSectionFocusGained

    private void txtDTSubSectionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDTSubSectionFocusLost
        txtDTSubSection.select(0, 0);
        txtDTSubSection.setBackground(new Color(191, 214, 235));
    }//GEN-LAST:event_txtDTSubSectionFocusLost

    private void txtDTOutsiderFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDTOutsiderFocusGained
        txtDTOutsider.selectAll();
        txtDTOutsider.setBackground(Color.YELLOW);
    }//GEN-LAST:event_txtDTOutsiderFocusGained

    private void txtDTOutsiderFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDTOutsiderFocusLost
        txtDTOutsider.select(0, 0);
        txtDTOutsider.setBackground(new Color(191, 214, 235));
    }//GEN-LAST:event_txtDTOutsiderFocusLost

    private void txtDTDRFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDTDRFocusGained
        txtDTDR.selectAll();
        txtDTDR.setBackground(Color.YELLOW);
    }//GEN-LAST:event_txtDTDRFocusGained

    private void txtDTDRFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDTDRFocusLost
        txtDTDR.select(0, 0);
        txtDTDR.setBackground(new Color(191, 214, 235));
    }//GEN-LAST:event_txtDTDRFocusLost

    private void txtDTCRFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDTCRFocusGained
        txtDTCR.selectAll();
        txtDTCR.setBackground(Color.YELLOW);
    }//GEN-LAST:event_txtDTCRFocusGained

    private void txtDTCRFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDTCRFocusLost
        txtDTCR.select(0, 0);
        txtDTCR.setBackground(new Color(191, 214, 235));
    }//GEN-LAST:event_txtDTCRFocusLost

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.dispose();
        CommonJurnalForm.ItemRefresh.doClick();
    }//GEN-LAST:event_formWindowClosing

    private void cmbFinancialYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFinancialYearActionPerformed
        viewDT();
    }//GEN-LAST:event_cmbFinancialYearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {

                CommonGLAccountOpenningBalances dialog = new CommonGLAccountOpenningBalances(new javax.swing.JFrame(), true);
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static org.jdesktop.swingx.JXTable Table1;
    private org.jdesktop.swingx.JXTable Table2;
    private org.nbs.components.HiddenItemComboBox cmbFinancialYear;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    public static javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private org.jdesktop.swingx.JXStatusBar jXStatusBar1;
    private javax.swing.JLabel lableName;
    private javax.swing.JLabel statusGLCode;
    private javax.swing.JLabel statusHDID;
    public static javax.swing.JLabel statusOutsider;
    public static javax.swing.JLabel statusReason;
    public static javax.swing.JLabel statusSubsection;
    private javax.swing.JLabel statusUserName;
    public static org.nbs.components.HiddenIDTextField txtDTCR;
    public static org.nbs.components.HiddenIDTextField txtDTDR;
    public static org.nbs.components.HiddenIDTextField txtDTOutsider;
    public static org.nbs.components.HiddenIDTextField txtDTSubSection;
    public static org.nbs.components.HiddenIDTextField txtDebitAccount;
    private org.nbs.components.SelectAtFocusFormattedTextField txtTotalCR;
    private org.nbs.components.SelectAtFocusFormattedTextField txtTotalDR;
    // End of variables declaration//GEN-END:variables

    private void saveHeader() {
//        List<Object> inputs = new ArrayList<>();
//        try {
//            inputs.add(hdID);
//            inputs.add(txtTrnDate.getText());
//            inputs.add(txtBillNo.getText());
//            inputs.add(0);
//            inputs.add(txtSubSection.getId());
//            inputs.add(glcode);
//            inputs.add(txtOutSider.getId());
//            inputs.add(txtReason.getId());
//
//            if (jTabbedPane1.isEnabledAt(0)) {
//                inputs.add(txtDebitAccount.getId());
//            } else if (jTabbedPane1.isEnabledAt(1)) {
//                inputs.add(txtBankCrr.getId());
//            }
//            inputs.add(2);
//            inputs.add(FormatConstants.numberFormat1.parse(txtTotal.getText()).doubleValue());
//            switch (glcode) {
//                case GLCodes.CREDITORSPAYMENTS:
//                case GLCodes.OTHERPAYMENTS:
//                case GLCodes.ADVANCEPURCHASES:
//                case GLCodes.OTHERADVANCES:
//                    inputs.add(0);
//                    inputs.add(FormatConstants.numberFormat1.parse(txtTotal.getText()).doubleValue());
//                    break;
//            }
//            inputs.add(txtRemarks.getText());
//            inputs.add(GeneralUserLogin.data.getUsername());
//            inputs.add(GeneralUserLogin.data.getSystemDate());
//            inputs.add(txtCheckNo.getText());
//            inputs.add(FormatConstants.dateFormat.format(jdtCheckDate.getDate()));
//            inputs.add(FormatConstants.numberFormat1.parse(txtMinAmount.getText()).doubleValue());
//            inputs.add(FormatConstants.numberFormat1.parse(txtMaxAmount.getText()).doubleValue());
//            inputs.add(GeneralUserLogin.data.getUsername());
//            inputs.add(GeneralUserLogin.data.getSystemDate());
//            inputs.add("@recid");
//            inputs.add("@billNo");
//
//            List<Object> outputs = ServerConnection.getServerConnector().insertData(inputs, "ssp_F28_Insert_Oth_TrnHD", 2);
//            txtBillNo.setText(String.valueOf(outputs.get(1)));
//            hdID = String.valueOf(outputs.get(0));
//            statusHDID.setText(hdID);
//        } catch (RemoteException ex) {
//            Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (ParseException ex) {
//            Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }
    private int dtid = 0;

    private void saveDetail() {
        try {
            List<Object> inputs = new ArrayList<>();
            inputs.add(dtid);
            inputs.add(cmbFinancialYear.getSelectedItem().getId());
            inputs.add(txtDTSubSection.getId());
            inputs.add(txtDTOutsider.getId());
            inputs.add(txtDebitAccount.getId());
            inputs.add(FormatConstants.decimalFormat.parse(txtDTDR.getText()).doubleValue());
            inputs.add(FormatConstants.decimalFormat.parse(txtDTCR.getText()).doubleValue());
            inputs.add(GeneralUserLogin.data.getUsername());

            ServerConnection.getServerConnector().insertData(inputs, "ssp_F28_Insert_OpenBal_Sections", 0);
        } catch (RemoteException ex) {
            Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
        }
        dtid = 0;
    }

    private void viewDT() {
        try {
            dtm2.setRowCount(0);
            List<Object> inputs = new ArrayList<>();
            inputs.add(cmbFinancialYear.getSelectedItem().getId());
            inputs.add(txtDebitAccount.getId());
            System.out.println(inputs);
            List<List<Object>> outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_F28_LoadCombo_OpenBalSections", 7);

            for (List<Object> output : outputs) {
                Vector v = new Vector();
                for (Object object : output) {
                    v.add(object);
                }
                dtm2.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
        }
        getTotal();
    }

    private void getTotal() {
        double total = 0;
        for (int i = 0; i < Table2.getRowCount(); i++) {
            try {
                total += FormatConstants.numberFormat1.parse(String.valueOf(Table2.getValueAt(i, 2))).doubleValue();
            } catch (ParseException ex) {
                Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        txtTotalDR.setText(FormatConstants.numberFormat1.format(total));

        total = 0;
        for (int i = 0; i < Table2.getRowCount(); i++) {
            try {
                total += FormatConstants.numberFormat1.parse(String.valueOf(Table2.getValueAt(i, 3))).doubleValue();
            } catch (ParseException ex) {
                Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        txtTotalCR.setText(FormatConstants.numberFormat1.format(total));
    }

    private void initRowData() {
        JTextField fields[] = {txtDTCR, txtDTDR, txtDTOutsider, txtDTSubSection, txtDebitAccount, txtTotalCR};
        for (JTextField field : fields) {
            field.setText("");
            if (field instanceof HiddenIDTextField) {
                ((HiddenIDTextField) field).setId(0);
            }
        }
        txtDTCR.setText("0.00");
        txtDTDR.setText("0.00");
    }

    private void loadFinancialYear() {
        try {
            List<Object> inputs = new ArrayList<>();
            inputs.add(7);
            inputs.add(null);
            inputs.add(null);
            inputs.add(0);
            inputs.add(0);
            List<List<Object>> outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_F28_LoadCombo_ViewStock", 2);
            Vector v = new Vector();
            for (List<Object> output : outputs) {

                v.add(new Item(Integer.parseInt(String.valueOf(output.get(0))), String.valueOf(output.get(1))));

            }
            cmbFinancialYear.setModel(new DefaultComboBoxModel<>(v));
        } catch (SQLException ex) {
            Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(CommonGLAccountOpenningBalances.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
