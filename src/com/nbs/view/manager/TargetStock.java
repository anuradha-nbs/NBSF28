/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * frm_Act_Budget.java
 *needed
 * Created on Jan 6, 2014, 8:11:32 AM
 */
package com.nbs.view.manager;

import Resources.SystemParameterList;
import Sources.TableColumnFontChanger;
import Sources.TableColumnRightAlign;
import com.nbs.impl.ServerConnection;
import com.nbs.view.common.FormatConstants;
import com.nbs.view.common.GeneralUserLogin;
import com.nbs.view.common.TableHeaders;
import com.nbs.view.common.search.FindAccount5Data;
import com.nbs.view.common.search.FindSectionOrOutsider;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.nbs.resources.Item;

/**
 *
 * @author mmh
 */
public class TargetStock extends javax.swing.JDialog {

    private DefaultTableModel dtm;

    /**
     * Creates new form frm_Act_Budget
     */
    public TargetStock(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        changeTableHeader();
        setTitle("Server on " + GeneralUserLogin.data.getIP());
        loadFinancialYear();
        TableColumnFontChanger.setIskolaPotha(dataTable, 0);
        TableColumnRightAlign.alignMany(dataTable, new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12});
        dataTable.setShowGrid(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new org.jdesktop.swingx.JXTable();
        jPanel4 = new javax.swing.JPanel();
        txtACT5 = new org.nbs.components.HiddenIDTextField();
        month1 = new javax.swing.JTextField();
        month2 = new javax.swing.JTextField();
        month3 = new javax.swing.JTextField();
        month4 = new javax.swing.JTextField();
        month5 = new javax.swing.JTextField();
        month6 = new javax.swing.JTextField();
        month7 = new javax.swing.JTextField();
        month8 = new javax.swing.JTextField();
        month9 = new javax.swing.JTextField();
        month10 = new javax.swing.JTextField();
        month11 = new javax.swing.JTextField();
        month12 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbFinancialYear = new org.nbs.components.HiddenItemComboBox();
        jLabel4 = new javax.swing.JLabel();
        txtSubSectionHeader = new org.nbs.components.HiddenIDTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(java.awt.Color.white);

        jPanel2.setBackground(new java.awt.Color(0, 88, 136));
        jPanel2.setBorder(null);

        jLabel1.setFont(new java.awt.Font("Iskoola Pota", 1, 25)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(254, 254, 254));
        jLabel1.setText("ඉලක්ක ඇතුලත් කිරීම");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
        );

        jPanel3.setBackground(java.awt.Color.white);

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descri", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "SubsectionID", "RecID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataTable.setRowHeight(26);
        dataTable.getTableHeader().setReorderingAllowed(false);
        dataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dataTable);
        if (dataTable.getColumnModel().getColumnCount() > 0) {
            dataTable.getColumnModel().getColumn(0).setMinWidth(329);
            dataTable.getColumnModel().getColumn(0).setPreferredWidth(329);
            dataTable.getColumnModel().getColumn(0).setMaxWidth(329);
            dataTable.getColumnModel().getColumn(1).setMinWidth(85);
            dataTable.getColumnModel().getColumn(1).setPreferredWidth(85);
            dataTable.getColumnModel().getColumn(1).setMaxWidth(85);
            dataTable.getColumnModel().getColumn(2).setMinWidth(85);
            dataTable.getColumnModel().getColumn(2).setPreferredWidth(85);
            dataTable.getColumnModel().getColumn(2).setMaxWidth(85);
            dataTable.getColumnModel().getColumn(3).setMinWidth(85);
            dataTable.getColumnModel().getColumn(3).setPreferredWidth(85);
            dataTable.getColumnModel().getColumn(3).setMaxWidth(85);
            dataTable.getColumnModel().getColumn(4).setMinWidth(85);
            dataTable.getColumnModel().getColumn(4).setPreferredWidth(85);
            dataTable.getColumnModel().getColumn(4).setMaxWidth(85);
            dataTable.getColumnModel().getColumn(5).setMinWidth(85);
            dataTable.getColumnModel().getColumn(5).setPreferredWidth(85);
            dataTable.getColumnModel().getColumn(5).setMaxWidth(85);
            dataTable.getColumnModel().getColumn(6).setMinWidth(85);
            dataTable.getColumnModel().getColumn(6).setPreferredWidth(85);
            dataTable.getColumnModel().getColumn(6).setMaxWidth(85);
            dataTable.getColumnModel().getColumn(7).setMinWidth(85);
            dataTable.getColumnModel().getColumn(7).setPreferredWidth(85);
            dataTable.getColumnModel().getColumn(7).setMaxWidth(85);
            dataTable.getColumnModel().getColumn(8).setMinWidth(85);
            dataTable.getColumnModel().getColumn(8).setPreferredWidth(85);
            dataTable.getColumnModel().getColumn(8).setMaxWidth(85);
            dataTable.getColumnModel().getColumn(9).setMinWidth(85);
            dataTable.getColumnModel().getColumn(9).setPreferredWidth(85);
            dataTable.getColumnModel().getColumn(9).setMaxWidth(85);
            dataTable.getColumnModel().getColumn(10).setMinWidth(85);
            dataTable.getColumnModel().getColumn(10).setPreferredWidth(85);
            dataTable.getColumnModel().getColumn(10).setMaxWidth(85);
            dataTable.getColumnModel().getColumn(11).setMinWidth(85);
            dataTable.getColumnModel().getColumn(11).setPreferredWidth(85);
            dataTable.getColumnModel().getColumn(11).setMaxWidth(85);
            dataTable.getColumnModel().getColumn(12).setMinWidth(85);
            dataTable.getColumnModel().getColumn(12).setPreferredWidth(85);
            dataTable.getColumnModel().getColumn(12).setMaxWidth(85);
            dataTable.getColumnModel().getColumn(13).setMinWidth(0);
            dataTable.getColumnModel().getColumn(13).setPreferredWidth(0);
            dataTable.getColumnModel().getColumn(13).setMaxWidth(0);
            dataTable.getColumnModel().getColumn(14).setMinWidth(0);
            dataTable.getColumnModel().getColumn(14).setPreferredWidth(0);
            dataTable.getColumnModel().getColumn(14).setMaxWidth(0);
        }

        jPanel4.setBackground(java.awt.Color.white);
        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 2, 1, 1));

        txtACT5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtACT5.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        txtACT5.setMaximumSize(new java.awt.Dimension(329, 28));
        txtACT5.setMinimumSize(new java.awt.Dimension(329, 28));
        txtACT5.setPreferredSize(new java.awt.Dimension(329, 28));
        txtACT5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtACT5KeyReleased(evt);
            }
        });
        txtACT5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtACT5ActionPerformed(evt);
            }
        });
        txtACT5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtACT5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtACT5FocusLost(evt);
            }
        });

        month1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        month1.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        month1.setText("0.00");
        month1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        month1.setMaximumSize(new java.awt.Dimension(85, 25));
        month1.setMinimumSize(new java.awt.Dimension(85, 25));
        month1.setPreferredSize(new java.awt.Dimension(85, 25));
        month1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                month1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                month1FocusLost(evt);
            }
        });
        month1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                month1MouseClicked(evt);
            }
        });
        month1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                month1ActionPerformed(evt);
            }
        });
        month1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                month1KeyReleased(evt);
            }
        });

        month2.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        month2.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        month2.setText("0.00");
        month2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        month2.setMaximumSize(new java.awt.Dimension(85, 25));
        month2.setMinimumSize(new java.awt.Dimension(85, 25));
        month2.setPreferredSize(new java.awt.Dimension(85, 25));
        month2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                month2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                month2FocusLost(evt);
            }
        });
        month2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                month2MouseClicked(evt);
            }
        });
        month2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                month2ActionPerformed(evt);
            }
        });
        month2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                month2KeyReleased(evt);
            }
        });

        month3.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        month3.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        month3.setText("0.00");
        month3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        month3.setMaximumSize(new java.awt.Dimension(85, 25));
        month3.setMinimumSize(new java.awt.Dimension(85, 25));
        month3.setPreferredSize(new java.awt.Dimension(85, 25));
        month3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                month3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                month3FocusLost(evt);
            }
        });
        month3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                month3MouseClicked(evt);
            }
        });
        month3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                month3ActionPerformed(evt);
            }
        });
        month3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                month3KeyReleased(evt);
            }
        });

        month4.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        month4.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        month4.setText("0.00");
        month4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        month4.setMaximumSize(new java.awt.Dimension(85, 25));
        month4.setMinimumSize(new java.awt.Dimension(85, 25));
        month4.setPreferredSize(new java.awt.Dimension(85, 25));
        month4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                month4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                month4FocusLost(evt);
            }
        });
        month4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                month4MouseClicked(evt);
            }
        });
        month4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                month4ActionPerformed(evt);
            }
        });
        month4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                month4KeyReleased(evt);
            }
        });

        month5.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        month5.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        month5.setText("0.00");
        month5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        month5.setMaximumSize(new java.awt.Dimension(85, 25));
        month5.setMinimumSize(new java.awt.Dimension(85, 25));
        month5.setPreferredSize(new java.awt.Dimension(85, 25));
        month5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                month5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                month5FocusLost(evt);
            }
        });
        month5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                month5MouseClicked(evt);
            }
        });
        month5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                month5ActionPerformed(evt);
            }
        });
        month5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                month5KeyReleased(evt);
            }
        });

        month6.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        month6.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        month6.setText("0.00");
        month6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        month6.setMaximumSize(new java.awt.Dimension(85, 25));
        month6.setMinimumSize(new java.awt.Dimension(85, 25));
        month6.setPreferredSize(new java.awt.Dimension(85, 25));
        month6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                month6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                month6FocusLost(evt);
            }
        });
        month6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                month6MouseClicked(evt);
            }
        });
        month6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                month6ActionPerformed(evt);
            }
        });
        month6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                month6KeyReleased(evt);
            }
        });

        month7.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        month7.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        month7.setText("0.00");
        month7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        month7.setMaximumSize(new java.awt.Dimension(85, 25));
        month7.setMinimumSize(new java.awt.Dimension(85, 25));
        month7.setPreferredSize(new java.awt.Dimension(85, 25));
        month7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                month7FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                month7FocusLost(evt);
            }
        });
        month7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                month7MouseClicked(evt);
            }
        });
        month7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                month7ActionPerformed(evt);
            }
        });
        month7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                month7KeyReleased(evt);
            }
        });

        month8.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        month8.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        month8.setText("0.00");
        month8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        month8.setMaximumSize(new java.awt.Dimension(85, 25));
        month8.setMinimumSize(new java.awt.Dimension(85, 25));
        month8.setPreferredSize(new java.awt.Dimension(85, 25));
        month8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                month8FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                month8FocusLost(evt);
            }
        });
        month8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                month8MouseClicked(evt);
            }
        });
        month8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                month8ActionPerformed(evt);
            }
        });
        month8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                month8KeyReleased(evt);
            }
        });

        month9.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        month9.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        month9.setText("0.00");
        month9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        month9.setMaximumSize(new java.awt.Dimension(85, 25));
        month9.setMinimumSize(new java.awt.Dimension(85, 25));
        month9.setPreferredSize(new java.awt.Dimension(85, 25));
        month9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                month9FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                month9FocusLost(evt);
            }
        });
        month9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                month9MouseClicked(evt);
            }
        });
        month9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                month9ActionPerformed(evt);
            }
        });
        month9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                month9KeyReleased(evt);
            }
        });

        month10.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        month10.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        month10.setText("0.00");
        month10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        month10.setMaximumSize(new java.awt.Dimension(85, 25));
        month10.setMinimumSize(new java.awt.Dimension(85, 25));
        month10.setPreferredSize(new java.awt.Dimension(85, 25));
        month10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                month10FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                month10FocusLost(evt);
            }
        });
        month10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                month10MouseClicked(evt);
            }
        });
        month10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                month10ActionPerformed(evt);
            }
        });
        month10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                month10KeyReleased(evt);
            }
        });

        month11.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        month11.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        month11.setText("0.00");
        month11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        month11.setMaximumSize(new java.awt.Dimension(85, 25));
        month11.setMinimumSize(new java.awt.Dimension(85, 25));
        month11.setPreferredSize(new java.awt.Dimension(85, 25));
        month11.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                month11FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                month11FocusLost(evt);
            }
        });
        month11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                month11MouseClicked(evt);
            }
        });
        month11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                month11ActionPerformed(evt);
            }
        });
        month11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                month11KeyReleased(evt);
            }
        });

        month12.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        month12.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        month12.setText("0.00");
        month12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        month12.setMaximumSize(new java.awt.Dimension(83, 25));
        month12.setMinimumSize(new java.awt.Dimension(83, 25));
        month12.setPreferredSize(new java.awt.Dimension(83, 25));
        month12.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                month12FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                month12FocusLost(evt);
            }
        });
        month12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                month12MouseClicked(evt);
            }
        });
        month12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                month12ActionPerformed(evt);
            }
        });
        month12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                month12KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(txtACT5, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(month1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(month2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(month3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(month4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(month5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(month6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(month7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(month8, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(month9, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(month10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(month11, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(month12, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtACT5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(month1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(month2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(month3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(month4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(month5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(month6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(month7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(month8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(month9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(month10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(month11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(month12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1153, 1153, 1153)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1349, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1349, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 6, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBackground(java.awt.Color.white);
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.blue));

        jLabel2.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("මුදල් වර්ෂය :");

        cmbFinancialYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFinancialYearActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("අංශය :");

        txtSubSectionHeader.setFont(new java.awt.Font("AMALEE", 1, 15)); // NOI18N
        txtSubSectionHeader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubSectionHeaderActionPerformed(evt);
            }
        });
        txtSubSectionHeader.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSubSectionHeaderFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSubSectionHeaderFocusLost(evt);
            }
        });

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbFinancialYear, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSubSectionHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(603, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbFinancialYear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtSubSectionHeader, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void dataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataTableMouseClicked
    if (dataTable.getSelectedRow() > -1) {
        int selectedRow = dataTable.getSelectedRow();
        JTextField fields[] = {txtACT5, month1, month2, month3, month4, month5, month6, month7, month8, month9, month10, month11, month12};
        for (int i = 0; i < dataTable.getColumnCount(); i++) {
            switch (i) {
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                    fields[i].setText(String.valueOf(dataTable.getValueAt(selectedRow, i)));
                    break;
                case 13:
                    txtACT5.setId(Integer.parseInt(String.valueOf(dataTable.getValueAt(selectedRow, 13))));
                    break;
                case 14:
                    dtid = Integer.parseInt(String.valueOf(dataTable.getValueAt(selectedRow, 14)));
                    break;
                default:
                    break;
            }
        }
        month1.grabFocus();
    }
}//GEN-LAST:event_dataTableMouseClicked

private void month2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_month2KeyReleased

}//GEN-LAST:event_month2KeyReleased

private void month1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_month1KeyReleased

}//GEN-LAST:event_month1KeyReleased

private void month3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_month3KeyReleased

}//GEN-LAST:event_month3KeyReleased

private void month4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_month4KeyReleased

}//GEN-LAST:event_month4KeyReleased

private void month5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_month5KeyReleased

}//GEN-LAST:event_month5KeyReleased

private void month6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_month6KeyReleased
    if (evt.getKeyCode() == 10) {
        month7.grabFocus();
        month7.selectAll();
    }
}//GEN-LAST:event_month6KeyReleased

private void month7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_month7KeyReleased

}//GEN-LAST:event_month7KeyReleased

private void month8KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_month8KeyReleased

}//GEN-LAST:event_month8KeyReleased

private void month9KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_month9KeyReleased

}//GEN-LAST:event_month9KeyReleased

private void month10KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_month10KeyReleased

}//GEN-LAST:event_month10KeyReleased

private void month11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_month11KeyReleased

}//GEN-LAST:event_month11KeyReleased

private void month1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_month1MouseClicked

}//GEN-LAST:event_month1MouseClicked

private void month2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_month2MouseClicked

}//GEN-LAST:event_month2MouseClicked

private void month3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_month3MouseClicked

}//GEN-LAST:event_month3MouseClicked

private void month4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_month4MouseClicked

}//GEN-LAST:event_month4MouseClicked

private void month5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_month5MouseClicked

}//GEN-LAST:event_month5MouseClicked

private void month6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_month6MouseClicked

}//GEN-LAST:event_month6MouseClicked

private void month7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_month7MouseClicked

}//GEN-LAST:event_month7MouseClicked

private void month8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_month8MouseClicked

}//GEN-LAST:event_month8MouseClicked

private void month9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_month9MouseClicked

}//GEN-LAST:event_month9MouseClicked

private void month10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_month10MouseClicked

}//GEN-LAST:event_month10MouseClicked

private void month11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_month11MouseClicked

}//GEN-LAST:event_month11MouseClicked

private void month12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_month12MouseClicked

}//GEN-LAST:event_month12MouseClicked

private void month12KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_month12KeyReleased

}//GEN-LAST:event_month12KeyReleased

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    this.dispose();
}//GEN-LAST:event_jButton2ActionPerformed

    private void txtACT5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtACT5KeyReleased

    }//GEN-LAST:event_txtACT5KeyReleased

    private void txtACT5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtACT5ActionPerformed
        if (txtACT5.getText().trim().length() > 0) {
            month1.grabFocus();
        } else {
            new FindAccount5Data(this, true, 19).setVisible(true);
        }
    }//GEN-LAST:event_txtACT5ActionPerformed

    private void month1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_month1ActionPerformed
        month2.grabFocus();
    }//GEN-LAST:event_month1ActionPerformed

    private void month2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_month2ActionPerformed
        month3.grabFocus();
    }//GEN-LAST:event_month2ActionPerformed

    private void month3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_month3ActionPerformed
        month4.grabFocus();
    }//GEN-LAST:event_month3ActionPerformed

    private void month4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_month4ActionPerformed
        month5.grabFocus();
    }//GEN-LAST:event_month4ActionPerformed

    private void month5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_month5ActionPerformed
        month6.grabFocus();
    }//GEN-LAST:event_month5ActionPerformed

    private void month6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_month6ActionPerformed
        month7.grabFocus();
    }//GEN-LAST:event_month6ActionPerformed

    private void month7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_month7ActionPerformed
        month8.grabFocus();
    }//GEN-LAST:event_month7ActionPerformed

    private void month8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_month8ActionPerformed
        month9.grabFocus();
    }//GEN-LAST:event_month8ActionPerformed

    private void month9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_month9ActionPerformed
        month10.grabFocus();
    }//GEN-LAST:event_month9ActionPerformed

    private void month10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_month10ActionPerformed
        month11.grabFocus();
    }//GEN-LAST:event_month10ActionPerformed

    private void month11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_month11ActionPerformed
        month12.grabFocus();
    }//GEN-LAST:event_month11ActionPerformed

    private void month12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_month12ActionPerformed
        JTextField fields[] = {month1, month2, month3, month4, month5, month6, month7, month8, month9, month10, month11, month12};
        for (JTextField field : fields) {
            if (field.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "යම් මාසයක දත්ත ඇතුලත් වී නොමැත. කරුණාකර නැවත පිරික්සන්න.", "කරුණාකර නැවත පිරික්සන්න.", JOptionPane.ERROR_MESSAGE);
                return;

            }
        }

        saveTargetStock();
        initTxtFields();
        viewDT(cmbFinancialYear.getSelectedItem().getId(), txtSubSectionHeader.getId());
        txtACT5.grabFocus();
        dtid = 0;
    }//GEN-LAST:event_month12ActionPerformed

    private void cmbFinancialYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFinancialYearActionPerformed

    }//GEN-LAST:event_cmbFinancialYearActionPerformed

    private void month1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month1FocusGained
        focusGained(evt.getComponent());
    }//GEN-LAST:event_month1FocusGained

    private void month1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month1FocusLost
        focusLost(evt.getComponent());
    }//GEN-LAST:event_month1FocusLost

    private void txtACT5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtACT5FocusGained
        focusGained(evt.getComponent());
        viewDT(cmbFinancialYear.getSelectedItem().getId(), txtSubSectionHeader.getId());
    }//GEN-LAST:event_txtACT5FocusGained

    private void month2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month2FocusGained
        focusGained(evt.getComponent());
    }//GEN-LAST:event_month2FocusGained

    private void month3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month3FocusGained
        focusGained(evt.getComponent());
    }//GEN-LAST:event_month3FocusGained

    private void month4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month4FocusGained
        focusGained(evt.getComponent());
    }//GEN-LAST:event_month4FocusGained

    private void month5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month5FocusGained
        focusGained(evt.getComponent());
    }//GEN-LAST:event_month5FocusGained

    private void month6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month6FocusGained
        focusGained(evt.getComponent());
    }//GEN-LAST:event_month6FocusGained

    private void month7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month7FocusGained
        focusGained(evt.getComponent());
    }//GEN-LAST:event_month7FocusGained

    private void month8FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month8FocusGained
        focusGained(evt.getComponent());
    }//GEN-LAST:event_month8FocusGained

    private void month10FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month10FocusGained
        focusGained(evt.getComponent());
    }//GEN-LAST:event_month10FocusGained

    private void month11FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month11FocusGained
        focusGained(evt.getComponent());
    }//GEN-LAST:event_month11FocusGained

    private void month12FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month12FocusGained
        focusGained(evt.getComponent());
    }//GEN-LAST:event_month12FocusGained

    private void txtACT5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtACT5FocusLost
        focusLost(evt.getComponent());
    }//GEN-LAST:event_txtACT5FocusLost

    private void month2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month2FocusLost
        focusLost(evt.getComponent());
    }//GEN-LAST:event_month2FocusLost

    private void month3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month3FocusLost
        focusLost(evt.getComponent());
    }//GEN-LAST:event_month3FocusLost

    private void month4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month4FocusLost
        focusLost(evt.getComponent());
    }//GEN-LAST:event_month4FocusLost

    private void month5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month5FocusLost
        focusLost(evt.getComponent());
    }//GEN-LAST:event_month5FocusLost

    private void month6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month6FocusLost
        focusLost(evt.getComponent());
    }//GEN-LAST:event_month6FocusLost

    private void month7FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month7FocusLost
        focusLost(evt.getComponent());
    }//GEN-LAST:event_month7FocusLost

    private void month8FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month8FocusLost
        focusLost(evt.getComponent());
    }//GEN-LAST:event_month8FocusLost

    private void month9FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month9FocusLost
        focusLost(evt.getComponent());
    }//GEN-LAST:event_month9FocusLost

    private void month9FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month9FocusGained
        focusGained(evt.getComponent());
    }//GEN-LAST:event_month9FocusGained

    private void month10FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month10FocusLost
        focusLost(evt.getComponent());
    }//GEN-LAST:event_month10FocusLost

    private void month11FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month11FocusLost
        focusLost(evt.getComponent());
    }//GEN-LAST:event_month11FocusLost

    private void month12FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_month12FocusLost
        focusLost(evt.getComponent());
    }//GEN-LAST:event_month12FocusLost

    private void txtSubSectionHeaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubSectionHeaderActionPerformed
        jButton1.doClick();
    }//GEN-LAST:event_txtSubSectionHeaderActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new FindSectionOrOutsider(this, true, TableHeaders.SUBSECTIONFINDER_TABLE_MODEL, TableHeaders.SUBSECTIONFINDER_TABLE_MODEL2, 63, "අනු අංශය").setVisible(true);
        FindSectionOrOutsider.txtSearchData.grabFocus();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtSubSectionHeaderFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSubSectionHeaderFocusGained
        viewDT(cmbFinancialYear.getSelectedItem().getId(), txtSubSectionHeader.getId());
    }//GEN-LAST:event_txtSubSectionHeaderFocusGained

    private void txtSubSectionHeaderFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSubSectionHeaderFocusLost
        viewDT(cmbFinancialYear.getSelectedItem().getId(), txtSubSectionHeader.getId());
    }//GEN-LAST:event_txtSubSectionHeaderFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TargetStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TargetStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TargetStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TargetStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                TargetStock dialog = new TargetStock(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private org.nbs.components.HiddenItemComboBox cmbFinancialYear;
    private org.jdesktop.swingx.JXTable dataTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField month1;
    private javax.swing.JTextField month10;
    private javax.swing.JTextField month11;
    private javax.swing.JTextField month12;
    private javax.swing.JTextField month2;
    private javax.swing.JTextField month3;
    private javax.swing.JTextField month4;
    private javax.swing.JTextField month5;
    private javax.swing.JTextField month6;
    private javax.swing.JTextField month7;
    private javax.swing.JTextField month8;
    private javax.swing.JTextField month9;
    public static org.nbs.components.HiddenIDTextField txtACT5;
    public static org.nbs.components.HiddenIDTextField txtSubSectionHeader;
    // End of variables declaration//GEN-END:variables

    private void viewPanel() {
//        if (jRadioButton1.isSelected()) {
//            jPanel5.setVisible(false);
//        }else if (jRadioButton2.isSelected()) {
//            jPanel3.setVisible(false);
//        }
    }

    private void changeTableHeader() {
        dataTable.getTableHeader().setFont(new Font("Iskoola Pota", Font.PLAIN, 17));
        String monthHeader[] = {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
        int startingMonth = Integer.parseInt(String.valueOf(SystemParameterList.parameters.get("nFinYearStartMonthID"))) - 1;
        List monthsList = new ArrayList<>();
        monthsList.add("අංශය");

        for (int i = startingMonth; i < 12; i++) {
            monthsList.add(monthHeader[i]);
        }
        if (startingMonth != 0) {
            for (int i = 0; i < startingMonth; i++) {
                monthsList.add(monthHeader[i]);
            }
        }
        monthsList.add("SubSectionID");
        monthsList.add("RecID");

        dtm = (DefaultTableModel) dataTable.getModel();
        dtm.setColumnIdentifiers(monthsList.toArray());

        for (int i = 0; i < dtm.getColumnCount(); i++) {
            if (i == 0) {
                dataTable.getColumn(i).setMaxWidth(329);
                dataTable.getColumn(i).setMinWidth(329);
                dataTable.getColumn(i).setPreferredWidth(329);
            } else if (i == 14 || i == 13) {
                dataTable.getColumn(i).setMaxWidth(0);
                dataTable.getColumn(i).setMinWidth(0);
                dataTable.getColumn(i).setPreferredWidth(0);
            } else {
                dataTable.getColumn(i).setMaxWidth(85);
                dataTable.getColumn(i).setMinWidth(85);
                dataTable.getColumn(i).setPreferredWidth(85);
            }
        }
    }

    private void loadFinancialYear() {
        try {
            List<Object> inputs = new ArrayList<>();
            inputs.add(7);
            inputs.add(null);
            inputs.add(null);
            inputs.add(0);
            inputs.add(0);
            List<List<Object>> outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_F28_LoadCombo_ViewStock", 2);
            Vector v = new Vector();
            for (List<Object> output : outputs) {

                v.add(new Item(Integer.parseInt(String.valueOf(output.get(0))), String.valueOf(output.get(1))));

            }
            cmbFinancialYear.setModel(new DefaultComboBoxModel<>(v));
        } catch (SQLException ex) {
            Logger.getLogger(TargetStock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TargetStock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(TargetStock.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private int dtid = 0;

    private void saveTargetStock() {
        try {
            List<Object> inputs = new ArrayList<>();
            inputs.add(dtid);
            inputs.add(cmbFinancialYear.getSelectedItem().getId());
            inputs.add(txtSubSectionHeader.getId());
            inputs.add(txtACT5.getId());
//            System.out.println(optPurchasePrice.isSelected());
//            if (optPurchasePrice.isSelected()) {
//                inputs.add(1);
//            } else {
//                inputs.add(2);
//            }
            JTextField fields[] = {month1, month2, month3, month4, month5, month6, month7, month8, month9, month10, month11, month12};
            for (JTextField field : fields) {
                inputs.add(FormatConstants.decimalFormat.parse(field.getText()).doubleValue());
            }
            inputs.add(GeneralUserLogin.data.getUsername());

            ServerConnection.getServerConnector().insertData(inputs, "ssp_F28_Insert_TargetDT", 0);
        } catch (SQLException ex) {
            Logger.getLogger(TargetStock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TargetStock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(TargetStock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(TargetStock.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void viewDT(int finYearID, int subSectionID) {
        try {
            dtm.setRowCount(0);
            List<Object> inputs = new ArrayList<>();
            inputs.add(finYearID);
            inputs.add(subSectionID);
            List<List<Object>> outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_F28_LoadCombo_ViewTargetDT", 15);
            for (List<Object> output : outputs) {
                Vector v = new Vector();
                for (Object object : output) {
                    v.add(object);
                }
                dtm.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TargetStock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TargetStock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(TargetStock.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initTxtFields() {
        JTextField fields[] = {month1, month2, month3, month4, month5, month6, month7, month8, month9, month10, month11, month12};
        for (JTextField field : fields) {
            field.setText("0.00");
        }
        txtACT5.setText("");
        txtACT5.setId(0);
    }

    private void focusGained(Component component) {
        component.setBackground(Color.YELLOW);
        ((JTextField) component).selectAll();
    }

    private void focusLost(Component component) {
        component.setBackground(Color.WHITE);
        ((JTextField) component).select(0, 0);
    }

    private void insertFields(int nReportNameID, int nFinYearID, int nSubSectionID) {
        try {
            List<Object> inputs = new ArrayList<>();
            inputs.add(nReportNameID);
            inputs.add(nFinYearID);
            inputs.add(nSubSectionID);
            System.out.println(inputs + "Insert");
            ServerConnection.getServerConnector().insertData(inputs, "ssp_F28_Insert_Targets", 0);
        } catch (SQLException ex) {
            Logger.getLogger(TargetStock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TargetStock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(TargetStock.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
