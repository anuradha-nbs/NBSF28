/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nbs.view.manager.GL;

import Sources.MakeTableSearchLikeExcel;
import Sources.TableColumnFontChanger;
import com.nbs.impl.ServerConnection;
import java.awt.Font;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.table.DefaultTableModel;
import org.nbs.resources.Item;

/**
 * created on Nov 24, 2015
 *
 * @author mmh
 *
 */
public class GLAccountsTransfer extends javax.swing.JFrame {

    DefaultTableModel dtm;
    DefaultListModel<Item> dlm;
    private JList dataList;

    /**
     * Creates new form GLAccountsTransfer
     */
    public GLAccountsTransfer() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        TableColumnFontChanger.setAmalee(dataTable, 2);
        TableColumnFontChanger.setAmalee(dataTable, 4);
        TableColumnFontChanger.setIskolaPotha(dataTable, 3);
        dtm = (DefaultTableModel) dataTable.getModel();
        dlm = new DefaultListModel<>();
        dataList = new JList(dlm);
        dataList.setFont(new Font("Iskoola Pota", 0, 16));
        jScrollPane2.setViewportView(dataList);
        loadAcctL4();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new org.jdesktop.swingx.JXTable();
        comboAcctL4 = new org.nbs.components.HiddenItemComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(java.awt.Color.white);

        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 1, true));

        dataTable.setAutoCreateRowSorter(true);
        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "AccountNo.", "Description", "Description Unicode", "Main Type"
            }
        ));
        dataTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        dataTable.setColumnControlVisible(true);
        dataTable.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        dataTable.setRowHeight(20);
        jScrollPane1.setViewportView(dataTable);
        if (dataTable.getColumnModel().getColumnCount() > 0) {
            dataTable.getColumnModel().getColumn(0).setMinWidth(50);
            dataTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            dataTable.getColumnModel().getColumn(1).setMinWidth(100);
            dataTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            dataTable.getColumnModel().getColumn(2).setMinWidth(200);
            dataTable.getColumnModel().getColumn(2).setPreferredWidth(200);
            dataTable.getColumnModel().getColumn(3).setMinWidth(300);
            dataTable.getColumnModel().getColumn(3).setPreferredWidth(300);
            dataTable.getColumnModel().getColumn(4).setMinWidth(100);
            dataTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        comboAcctL4.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        comboAcctL4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAcctL4ActionPerformed(evt);
            }
        });

        jButton1.setText(">>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<<");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 1, true));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Iskoola Pota", 1, 21)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icon_reset.gif"))); // NOI18N
        jLabel1.setText("පැරණි පද්ධතියේ පොදු ලෙජර ගිණුම් නව පද්ධතියට  මාරු කිරීම");
        jPanel2.add(jLabel1);

        jScrollPane2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 1, true));
        jScrollPane2.setFont(new java.awt.Font("Iskoola Pota", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboAcctL4, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboAcctL4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(30, 30, 30)
                                .addComponent(jButton2)
                                .addGap(198, 198, 198))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE))
                .addGap(4, 4, 4))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1061, 601));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRow = dataTable.getSelectedRow();
        List inputs = new ArrayList<>();
        inputs.add(1);
        String valueOf = String.valueOf(dataTable.getValueAt(selectedRow, 0));
        System.out.println(valueOf+"=======");
        int i=0;
        if (valueOf.equals("") || valueOf == null || valueOf == "null") {
            i = 0;
        } else {
            i = Integer.parseInt(valueOf);
        }
        inputs.add(i);
        inputs.add(comboAcctL4.getSelectedItem().getId());
        inputs.add(String.valueOf(dataTable.getValueAt(selectedRow, 2)));
        inputs.add(String.valueOf(dataTable.getValueAt(selectedRow, 3)));
        
        List<List<Object>> outputs = null;
        try {
            outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_Act_OldAccountTransfer", 2);
        } catch (RemoteException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        }
        Item item = null;
        dlm.clear();
        for (List<Object> output : outputs) {
            item = new Item(Integer.parseInt(output.get(0).toString()), output.get(1).toString());
            dlm.add(dlm.getSize(), item);
        }
        dtm.removeRow(selectedRow);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selectedRow = dataTable.getSelectedRow();
        List inputs = new ArrayList<>();
        inputs.add(2);
        inputs.add(((Item) dataList.getSelectedValue()).getId());
        inputs.add(comboAcctL4.getSelectedItem().getId());
        inputs.add("");
        inputs.add("");
        try {
            ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_Act_OldAccountTransfer", 2);
        } catch (RemoteException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        }
        dlm.remove(dataList.getSelectedIndex());
        loadTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void comboAcctL4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAcctL4ActionPerformed
        List inputs = new ArrayList<>();
        inputs.add(3);
        inputs.add(0);
        inputs.add(comboAcctL4.getSelectedItem().getId());
        inputs.add("");
        inputs.add("");
        List<List<Object>> outputs = null;
        try {
            outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_Act_OldAccountTransfer", 2);
        } catch (RemoteException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        }
        Item item = null;
        dlm.clear();
        for (List<Object> output : outputs) {
            item = new Item(Integer.parseInt(output.get(0).toString()), output.get(1).toString());
            dlm.add(dlm.getSize(), item);
        }
        
    }//GEN-LAST:event_comboAcctL4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GLAccountsTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GLAccountsTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GLAccountsTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GLAccountsTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GLAccountsTransfer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.nbs.components.HiddenItemComboBox comboAcctL4;
    private org.jdesktop.swingx.JXTable dataTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    private void loadAcctL4() {
        try {
            List<Object> inputs = new ArrayList<>();
            inputs.add(10);
            inputs.add(0);
            List<List<Object>> outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_bnk_LoadCombo_ActTree", 5);
            Vector v = new Vector();
            for (List<Object> output : outputs) {
                v.add(new Item(Integer.parseInt(output.get(0).toString()), output.get(1).toString() + "  " + output.get(3).toString()));
            }
            comboAcctL4.setModel(new DefaultComboBoxModel<>(v));
        } catch (RemoteException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadTable() {
//        MakeTableSearchLikeExcel.setDataTaSbleSearchable(5, dataTable);
        dtm.setRowCount(0);
        List<Object> inputs = new ArrayList<>();
        inputs.add(11);
        inputs.add(0);
        try {
            List<List<Object>> outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_bnk_LoadCombo_ActTree", 5);
            for (List<Object> output : outputs) {
                Vector v = new Vector();
                for (Object object : output) {
                    v.add(object);
                }
                dtm.addRow(v);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GLAccountsTransfer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
