/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nbs.view.manager;

import Sources.User;
import com.jidesoft.swing.SearchableUtils;
import com.jidesoft.swing.TableSearchable;
import com.nbs.impl.ServerConnection;
import com.nbs.view.Reports.AuditReportPanel;
import com.nbs.view.common.GeneralUserLogin;
import java.awt.Color;
import java.awt.Component;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.nbs.resources.Item;

/**
 *
 * @author mmh
 */
public class FinancialYearCompletedMonths extends javax.swing.JPanel {

    DefaultTableModel dtm;
    int type;
    TableSearchable tableSearchable;
    private String[] tableHeaders;
    String code;
    public JFrame parentForCommonJurnalForm;
    private User user;
    public static String searchPanelSerialized;

    /**
     * Creates new form CommonJurnalForm
     */
    public FinancialYearCompletedMonths() {
        initComponents();
//        dtm = new DefaultTableModel() {
//            @Override
//            public boolean isCellEditable(int row, int column) {
//                return false;
//            }
//        };
//        dataTable.setModel(dtm);
        dtm = (DefaultTableModel) dataTable.getModel();
        dataTable.setShowGrid(true);
        tableSearchable = SearchableUtils.installSearchable(dataTable);
        loadFinancialYear();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        newF28 = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        detailHeader = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbFinYear = new org.nbs.components.HiddenItemComboBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dataTable = new org.jdesktop.swingx.JXTable();

        jPopupMenu1.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jPopupMenu1PopupMenuWillBecomeVisible(evt);
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        newF28.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        newF28.setText("නව F28 වාර්තාවක් ලබාගැනීම");
        newF28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newF28ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(newF28);

        edit.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        edit.setText("සංස්කරණය");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        jPopupMenu1.add(edit);

        setBackground(new java.awt.Color(135, 206, 250));

        jPanel1.setMinimumSize(new java.awt.Dimension(1006, 660));

        lblTitle.setBackground(new java.awt.Color(0, 114, 198));
        lblTitle.setFont(new java.awt.Font("Iskoola Pota", 1, 21)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("මාසික F28 වාර්තාව");
        lblTitle.setOpaque(true);

        detailHeader.setBackground(new java.awt.Color(254, 254, 254));

        jLabel1.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        jLabel1.setText("මුදල් වර්ෂය :");

        cmbFinYear.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        cmbFinYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFinYearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout detailHeaderLayout = new javax.swing.GroupLayout(detailHeader);
        detailHeader.setLayout(detailHeaderLayout);
        detailHeaderLayout.setHorizontalGroup(
            detailHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailHeaderLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbFinYear, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        detailHeaderLayout.setVerticalGroup(
            detailHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detailHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbFinYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "cFinYearName", "cMonthName", "cAddBy", "dAddDate", "bCompleted", "cCompletedBy", "dCompletedDate", "nMonthID", "nFinYearID", "nMonthStartDate", "nMonthLastDate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataTable.setComponentPopupMenu(jPopupMenu1);
        dataTable.setRowHeight(25);
        dataTable.setSelectionBackground(new java.awt.Color(0, 114, 198));
        dataTable.getTableHeader().setReorderingAllowed(false);
        dataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dataTableMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(dataTable);
        if (dataTable.getColumnModel().getColumnCount() > 0) {
            dataTable.getColumnModel().getColumn(7).setMinWidth(0);
            dataTable.getColumnModel().getColumn(7).setPreferredWidth(0);
            dataTable.getColumnModel().getColumn(7).setMaxWidth(0);
            dataTable.getColumnModel().getColumn(8).setMinWidth(0);
            dataTable.getColumnModel().getColumn(8).setPreferredWidth(0);
            dataTable.getColumnModel().getColumn(8).setMaxWidth(0);
            dataTable.getColumnModel().getColumn(9).setMinWidth(0);
            dataTable.getColumnModel().getColumn(9).setPreferredWidth(0);
            dataTable.getColumnModel().getColumn(9).setMaxWidth(0);
            dataTable.getColumnModel().getColumn(10).setMinWidth(0);
            dataTable.getColumnModel().getColumn(10).setPreferredWidth(0);
            dataTable.getColumnModel().getColumn(10).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1079, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(detailHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detailHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dataTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataTableMousePressed

    }//GEN-LAST:event_dataTableMousePressed

    private void cmbFinYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFinYearActionPerformed
        loadData();
    }//GEN-LAST:event_cmbFinYearActionPerformed

    private void newF28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newF28ActionPerformed
        try {
            List<Object> inputs = new ArrayList<>();
            inputs.add(cmbFinYear.getSelectedItem().getId());
            inputs.add(GeneralUserLogin.data.getSystemDate().getMonth() + 1);
            inputs.add(cmbFinYear.getSelectedItem().getDescription());
            inputs.add(0);
            inputs.add(GeneralUserLogin.data.getUsername());
            ServerConnection.getServerConnector().insertData(inputs, "ssp_F28_Insert_SysCompleted", 0);
            loadData();

            ManagerOperationalNavigation.navigateTo(new AuditReportPanel(GeneralUserLogin.data.getSystemDate().getMonth(), cmbFinYear.getSelectedItem().getId()), jPanel2);

        } catch (SQLException ex) {
            Logger.getLogger(FinancialYearCompletedMonths.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FinancialYearCompletedMonths.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(FinancialYearCompletedMonths.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_newF28ActionPerformed

    private void jPopupMenu1PopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jPopupMenu1PopupMenuWillBecomeVisible
        if (dataTable.getSelectedRow() > - 1) {
            if (dataTable.getValueAt(dataTable.getSelectedRow(), 4).toString().equals("0")) {
                newF28.setEnabled(false);
            } else {
                newF28.setEnabled(true);
            }
        } else {
            newF28.setEnabled(true);
        }
    }//GEN-LAST:event_jPopupMenu1PopupMenuWillBecomeVisible

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        if (dataTable.getSelectedRow() > -1) {
            ManagerOperationalNavigation.navigateTo(new AuditReportPanel(Integer.parseInt(String.valueOf(dataTable.getValueAt(dataTable.getSelectedRow(), 7))), Integer.parseInt(String.valueOf(dataTable.getValueAt(dataTable.getSelectedRow(), 8))),Integer.parseInt(String.valueOf(dataTable.getValueAt(dataTable.getSelectedRow(), 4))),String.valueOf(dataTable.getValueAt(dataTable.getSelectedRow(), 9)),String.valueOf(dataTable.getValueAt(dataTable.getSelectedRow(), 10))),jPanel2);
//            jPanel2.removeAll();
//            AuditReportPanel aa = new AuditReportPanel(Integer.parseInt(String.valueOf(dataTable.getValueAt(dataTable.getSelectedRow(), 7))), Integer.parseInt(String.valueOf(dataTable.getValueAt(dataTable.getSelectedRow(), 8))), Integer.parseInt(String.valueOf(dataTable.getValueAt(dataTable.getSelectedRow(), 4))));
//            aa.setSize(jPanel2.getSize());
//            jPanel2.add(aa);
//            jPanel2.repaint();
//            jPanel2.revalidate();
        }
    }//GEN-LAST:event_editActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.nbs.components.HiddenItemComboBox cmbFinYear;
    private org.jdesktop.swingx.JXTable dataTable;
    private javax.swing.JPanel detailHeader;
    private javax.swing.JMenuItem edit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JMenuItem newF28;
    // End of variables declaration//GEN-END:variables
    private void loadFinancialYear() {
        try {
            List<Object> inputs = new ArrayList<>();
            inputs.add(7);
            inputs.add(null);
            inputs.add(null);
            inputs.add(0);
            inputs.add(0);
            List<List<Object>> outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_F28_LoadCombo_ViewStock", 2);
            Vector v = new Vector();
            for (List<Object> output : outputs) {

                v.add(new Item(Integer.parseInt(String.valueOf(output.get(0))), String.valueOf(output.get(1))));

            }
            cmbFinYear.setModel(new DefaultComboBoxModel<>(v));
        } catch (SQLException ex) {
            Logger.getLogger(ClosingStock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ClosingStock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ClosingStock.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadData() {
        try {
            dtm.setRowCount(0);
            List<Object> inputs = new ArrayList<>();
            inputs.add(cmbFinYear.getSelectedItem().getId());
            List<List<Object>> outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_F28_LoadCombo_ViewSysCompleted", 11);
            for (List<Object> output : outputs) {
                Vector v = new Vector<>();
                for (Object object : output) {
                    v.add(object);
                }
                dtm.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(FinancialYearCompletedMonths.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FinancialYearCompletedMonths.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(FinancialYearCompletedMonths.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}

class ColumnColorRendererFin extends DefaultTableCellRenderer {

    public ColumnColorRendererFin() {
    }

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        Component c = getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        if (column == 8) {
            c.setBackground(Color.YELLOW);
        }
        return c;
    }
}
