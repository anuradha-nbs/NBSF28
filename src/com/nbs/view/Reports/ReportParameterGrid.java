/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nbs.view.Reports;

import Sources.KeyBoard;
import Sources.TableColumnFontChanger;
import com.nbs.impl.ServerConnection;
import com.nbs.view.common.search.FindAccount5Data;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import org.nbs.resources.Item;

/**
 *
 * @author mmh
 */
public class ReportParameterGrid extends javax.swing.JDialog {
    
    private DefaultTableModel dtm1;
    private DefaultTableModel dtm2;
    private DefaultTableModel dtm3;
    private DefaultTableModel dtm4;

    /**
     * Creates new form ReportParameterGrid
     */
    public ReportParameterGrid(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        int h=(int) (d.getHeight()-30);
        int w=(int) (d.getWidth());
        setSize(w, h);
        dtm1 = (DefaultTableModel) jXTable1.getModel();
        dtm2 = (DefaultTableModel) jXTable2.getModel();
        dtm3 = (DefaultTableModel) jXTable3.getModel();
        dtm4 = (DefaultTableModel) jXTable4.getModel();
        TableColumnFontChanger.setAmalee(jXTable4, 2);
        TableColumnFontChanger.setIskolaPotha(jXTable3, 3);
        TableColumnFontChanger.setIskolaPotha(jXTable1, 1);
        TableColumnFontChanger.setIskolaPotha(jXTable2, 3);
        refreshGrid(0);
        loadCombo1();
        loadFieldTable2();
        loadFieldTable4();
        loadGLLevels();
        jXTable3.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (jXTable3.getSelectedRow() > -1) {
                    loadFieldTable4();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jXTable1 = new org.jdesktop.swingx.JXTable();
        hiddenIDTextField1 = new org.nbs.components.HiddenIDTextField();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jXTable2 = new org.jdesktop.swingx.JXTable();
        hiddenIDTextField2 = new org.nbs.components.HiddenIDTextField();
        jButton2 = new javax.swing.JButton();
        hiddenItemComboBox1 = new org.nbs.components.HiddenItemComboBox();
        hiddenIDTextField3 = new org.nbs.components.HiddenIDTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        hiddenItemComboBox2 = new org.nbs.components.HiddenItemComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jXTable3 = new org.jdesktop.swingx.JXTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jXTable4 = new org.jdesktop.swingx.JXTable();
        hiddenIDTextField4 = new org.nbs.components.HiddenIDTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        hiddenItemComboBox3 = new org.nbs.components.HiddenItemComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jXTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Parameter Name"
            }
        ));
        jXTable1.getTableHeader().setReorderingAllowed(false);
        jXTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jXTable1);
        if (jXTable1.getColumnModel().getColumnCount() > 0) {
            jXTable1.getColumnModel().getColumn(0).setMinWidth(50);
            jXTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jXTable1.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        hiddenIDTextField1.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        hiddenIDTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hiddenIDTextField1KeyReleased(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(hiddenIDTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1)
                    .addComponent(hiddenIDTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("tab1", jPanel2);

        jXTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ReportFieldID", "ReportNameID", "FieldOrder", "FieldName", "Target"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jXTable2.getTableHeader().setReorderingAllowed(false);
        jXTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jXTable2);

        jButton2.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        hiddenItemComboBox1.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        hiddenItemComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hiddenItemComboBox1ActionPerformed(evt);
            }
        });

        hiddenIDTextField3.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        hiddenIDTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hiddenIDTextField3KeyReleased(evt);
            }
        });

        jCheckBox1.setText("Target");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(hiddenIDTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hiddenIDTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(hiddenItemComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hiddenItemComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(hiddenIDTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hiddenIDTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addContainerGap())
        );

        jTabbedPane1.addTab("tab2", jPanel3);

        hiddenItemComboBox2.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        hiddenItemComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hiddenItemComboBox2ActionPerformed(evt);
            }
        });

        jXTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "nReportFieldID", "nReportNameID", "nFieldOrder", "cFieldName"
            }
        ));
        jXTable3.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jXTable3.getTableHeader().setReorderingAllowed(false);
        jXTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jXTable3);

        jXTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "nReportFieldID", "nField_AcctLevelID5", "cDescriptionSin_L5", "nGLLevelID"
            }
        ));
        jXTable4.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jXTable4.getTableHeader().setReorderingAllowed(false);
        jXTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXTable4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jXTable4);
        if (jXTable4.getColumnModel().getColumnCount() > 0) {
            jXTable4.getColumnModel().getColumn(2).setMinWidth(150);
            jXTable4.getColumnModel().getColumn(2).setPreferredWidth(150);
        }

        hiddenIDTextField4.setFont(new java.awt.Font("AMALEE", 0, 18)); // NOI18N

        jButton3.setText("...");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("+");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hiddenItemComboBox2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(hiddenIDTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(hiddenItemComboBox3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hiddenItemComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE))
                .addGap(3, 3, 3)
                .addComponent(hiddenItemComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hiddenIDTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("tab3", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jXTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXTable1MouseClicked
        if (jXTable1.getSelectedRow() > -1) {
            hiddenIDTextField1.setText(String.valueOf(jXTable1.getValueAt(jXTable1.getSelectedRow(), 1)));
            hiddenIDTextField1.setId(Integer.parseInt(String.valueOf(jXTable1.getValueAt(jXTable1.getSelectedRow(), 0))));
        }
    }//GEN-LAST:event_jXTable1MouseClicked

    private void jXTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXTable2MouseClicked
        if (jXTable2.getSelectedRow() > -1) {
            hiddenIDTextField2.setText(String.valueOf(jXTable2.getValueAt(jXTable2.getSelectedRow(), 2)));
            hiddenIDTextField3.setText(String.valueOf(jXTable2.getValueAt(jXTable2.getSelectedRow(), 3)));
            hiddenIDTextField3.setId(Integer.parseInt(String.valueOf(jXTable2.getValueAt(jXTable2.getSelectedRow(), 0))));
        }
    }//GEN-LAST:event_jXTable2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (hiddenIDTextField1.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter some text", "Emptty text", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                List<Object> inputs = new ArrayList<>();
                inputs.add(hiddenIDTextField1.getId());
                inputs.add(hiddenIDTextField1.getText());
                inputs.add("@recid");
                List<Object> output = ServerConnection.getServerConnector().insertData(inputs, "ssp_F28_Insert_SysParaReport", 1);
                if (Integer.parseInt(String.valueOf(output.get(0))) != 0) {
                    JOptionPane.showMessageDialog(this, "Successful", "", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Something went wrong", "", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
            } catch (RemoteException ex) {
                Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
            }
            refreshGrid(0);
            hiddenIDTextField1.setText("");
            hiddenIDTextField1.setId(0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void hiddenItemComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hiddenItemComboBox1ActionPerformed
        loadFieldTable2();
    }//GEN-LAST:event_hiddenItemComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            List<Object> inputs = new ArrayList<>();
            inputs.add(hiddenIDTextField3.getId());
            inputs.add(hiddenItemComboBox1.getSelectedItem().getId());
            inputs.add(hiddenIDTextField2.getText());
            inputs.add(hiddenIDTextField3.getText());
            if(jCheckBox1.isSelected()){
                inputs.add(1);
            }else{
                inputs.add(0);
            }
            inputs.add("@recid");
            System.out.println(inputs);
            ServerConnection.getServerConnector().insertData(inputs, "ssp_F28_Insert_SysParaReportFields", 1);
            loadFieldTable2();
            hiddenIDTextField2.setText("");
            hiddenIDTextField3.setText("");
            hiddenIDTextField3.setId(0);
            jCheckBox1.setSelected(false);
        } catch (SQLException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void hiddenItemComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hiddenItemComboBox2ActionPerformed
        loadFieldTable3();
    }//GEN-LAST:event_hiddenItemComboBox2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new FindAccount5Data(this, true, 14, hiddenItemComboBox3.getSelectedItem().getDescription()).setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            List<Object> inputs = new ArrayList<>();
            inputs.add(jXTable3.getValueAt(jXTable3.getSelectedRow(), 0));
            inputs.add(hiddenIDTextField4.getId());
            inputs.add(hiddenItemComboBox3.getSelectedItem().getId());
            ServerConnection.getServerConnector().insertData(inputs, "ssp_F28_Insert_SysParaReportFields_GL_Links", 0);
        } catch (SQLException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        }
        loadFieldTable4();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jXTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXTable3MouseClicked
        if (jXTable3.getSelectedRow() > -1) {
            loadFieldTable4();
        }
    }//GEN-LAST:event_jXTable3MouseClicked

    private void hiddenIDTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hiddenIDTextField1KeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_F3) {
            new KeyBoard(true, hiddenIDTextField1).setVisible(true);
        }
    }//GEN-LAST:event_hiddenIDTextField1KeyReleased

    private void hiddenIDTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hiddenIDTextField3KeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_F3) {
            new KeyBoard(true, hiddenIDTextField3).setVisible(true);
        }
    }//GEN-LAST:event_hiddenIDTextField3KeyReleased

    private void jXTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXTable4MouseClicked
        if (jXTable4.getSelectedRow() > -1) {
            hiddenIDTextField4.setId(Integer.parseInt(String.valueOf(jXTable4.getValueAt(jXTable4.getSelectedRow(), 1))));
            hiddenIDTextField4.setText(String.valueOf(jXTable4.getValueAt(jXTable4.getSelectedRow(), 2)));
        }
    }//GEN-LAST:event_jXTable4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportParameterGrid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportParameterGrid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportParameterGrid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportParameterGrid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ReportParameterGrid dialog = new ReportParameterGrid(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.nbs.components.HiddenIDTextField hiddenIDTextField1;
    private org.nbs.components.HiddenIDTextField hiddenIDTextField2;
    private org.nbs.components.HiddenIDTextField hiddenIDTextField3;
    public static org.nbs.components.HiddenIDTextField hiddenIDTextField4;
    private org.nbs.components.HiddenItemComboBox hiddenItemComboBox1;
    private org.nbs.components.HiddenItemComboBox hiddenItemComboBox2;
    private org.nbs.components.HiddenItemComboBox hiddenItemComboBox3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private org.jdesktop.swingx.JXTable jXTable1;
    private org.jdesktop.swingx.JXTable jXTable2;
    private org.jdesktop.swingx.JXTable jXTable3;
    private org.jdesktop.swingx.JXTable jXTable4;
    // End of variables declaration//GEN-END:variables

    private void refreshGrid(int recid) {
        try {
            dtm1.setRowCount(0);
            List<Object> inputs = new ArrayList<>();
            inputs.add(1);
            inputs.add(recid);
            List<List<Object>> outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_F28_LoadCombo_ViewSysParaReport", 2);
            for (List<Object> output : outputs) {
                Vector v = new Vector();
                for (Object object : output) {
                    v.add(object);
                }
                dtm1.addRow(v);
            }
            recid = 0;
        } catch (SQLException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        }
        loadCombo1();
    }
    
    private void loadCombo1() {
        try {
            List<Object> inputs = new ArrayList<>();
            inputs.add(1);
            inputs.add(0);
            List<List<Object>> outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_F28_LoadCombo_ViewSysParaReport", 2);
            Vector v = new Vector();
            for (List<Object> output : outputs) {
                v.add(new Item(Integer.parseInt(String.valueOf(output.get(0))), String.valueOf(output.get(1))));
            }
            hiddenItemComboBox1.setModel(new DefaultComboBoxModel<>(v));
            hiddenItemComboBox2.setModel(new DefaultComboBoxModel<>(v));
        } catch (SQLException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void loadFieldTable2() {
        try {
            dtm2.setRowCount(0);
            List<Object> inputs = new ArrayList<>();
            inputs.add(2);
            inputs.add(hiddenItemComboBox1.getSelectedItem().getId());
            List<List<Object>> outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_F28_LoadCombo_ViewSysParaReport", 5);
            for (List<Object> output : outputs) {
                Vector v = new Vector();
                for (Object object : output) {
                    v.add(object);
                }
                dtm2.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        }
        jXTable2.packAll();
    }
    
    private void loadFieldTable3() {
        try {
            dtm3.setRowCount(0);
            List<Object> inputs = new ArrayList<>();
            inputs.add(2);
            inputs.add(hiddenItemComboBox2.getSelectedItem().getId());
            List<List<Object>> outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_F28_LoadCombo_ViewSysParaReport", 4);
            for (List<Object> output : outputs) {
                Vector v = new Vector();
                for (Object object : output) {
                    v.add(object);
                }
                dtm3.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        }
        jXTable3.packColumn(3, 1);
    }
    
    private void loadFieldTable4() {
        try {
            if (jXTable3.getSelectedRow() > -1) {
                dtm4.setRowCount(0);
                List<Object> inputs = new ArrayList<>();
                inputs.add(3);
                inputs.add(jXTable3.getValueAt(jXTable3.getSelectedRow(), 0));
                List<List<Object>> outputs = ServerConnection.getServerConnector().searchMultipleResults(inputs, "ssp_F28_LoadCombo_ViewSysParaReport", 4);
                for (List<Object> output : outputs) {
                    Vector v = new Vector();
                    for (Object object : output) {
                        v.add(object);
                    }
                    dtm4.addRow(v);
                }
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ReportParameterGrid.class.getName()).log(Level.SEVERE, null, ex);
        }
        jXTable4.packAll();
    }
    
    private void loadGLLevels() {
        Vector v = new Vector();
        for (int i = 2; i < 6; i++) {
            v.add(new Item(i, String.valueOf(i)));
        }
        hiddenItemComboBox3.setModel(new DefaultComboBoxModel<>(v));
    }
}
